name: Build and Publish chartscan Binaries

on:
  release:
    types: [created]  # Trigger the workflow only when a new release is created

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [1.22]
        architecture: [amd64, arm64, 386]
        os: [linux, windows]  # Add 'windows' to the matrix to build for Windows

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      
      - name: Install Go Dependencies
        run: go mod tidy
        
      - name: Build chartscan Binary
        run: |
          if [ "${{ matrix.os }}" == "windows" ]; then
            GOARCH=${{ matrix.architecture }} GOOS=${{ matrix.os }} go build -o chartscan-${{ matrix.os }}-${{ matrix.architecture }}.exe ./cmd/chartscan
          else
            GOARCH=${{ matrix.architecture }} GOOS=${{ matrix.os }} go build -o chartscan-${{ matrix.os }}-${{ matrix.architecture }} ./cmd/chartscan
          fi
        
      - name: Upload Binaries as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chartscan-${{ matrix.os }}-${{ matrix.architecture }}
          path: chartscan-${{ matrix.os }}-${{ matrix.architecture }}${{ matrix.os == 'windows' && '-amd64.exe' || '' }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Download Binaries from Artifacts
        uses: actions/download-artifact@v4
        with:
          name: chartscan-linux-amd64
          
      - name: Download Binaries from Artifacts (ARM64)
        uses: actions/download-artifact@v4
        with:
          name: chartscan-linux-arm64
          
      - name: Download Binaries from Artifacts (386)
        uses: actions/download-artifact@v4
        with:
          name: chartscan-linux-386

      - name: Download Binaries from Artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: chartscan-windows-amd64.exe
          
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            chartscan-linux-amd64
            chartscan-linux-arm64
            chartscan-linux-386
            chartscan-windows-amd64.exe  # Include the Windows binary with .exe extension
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
